{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-07-11T14:20:01.085Z",
    "end": "2022-07-11T14:21:25.902Z",
    "duration": 84817,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3da18706-bf18-4352-be45-0cee5a183247",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb0ffb5a-659d-43f0-b9e1-4ba2f39fa583",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 222,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "c0a7da69-ba01-48a3-8edf-44c5efa5444e",
              "parentUUID": "bb0ffb5a-659d-43f0-b9e1-4ba2f39fa583",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0a7da69-ba01-48a3-8edf-44c5efa5444e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "08d435fb-6ae2-4714-9642-e2754d11278e",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "1914c495-da05-4de3-8831-c6dd5644a3f3",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "014f1374-8145-4507-ab2e-146068a511d5",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f4f6258b-c950-4308-8345-d3062e73fa12",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "cfae1723-124d-4318-8ad5-4f8ee29e77d0",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "a21a0ec0-aa64-4afd-80c3-171ea429aa9f",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "db265520-6226-4502-b67e-8f5c54c90d92",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "f5e789ba-da89-4aae-8e94-49046af31f85",
              "parentUUID": "08d435fb-6ae2-4714-9642-e2754d11278e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1914c495-da05-4de3-8831-c6dd5644a3f3",
            "014f1374-8145-4507-ab2e-146068a511d5",
            "f4f6258b-c950-4308-8345-d3062e73fa12",
            "cfae1723-124d-4318-8ad5-4f8ee29e77d0",
            "a21a0ec0-aa64-4afd-80c3-171ea429aa9f",
            "db265520-6226-4502-b67e-8f5c54c90d92",
            "f5e789ba-da89-4aae-8e94-49046af31f85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "42ae4fdf-ede2-4578-87cc-960d967f1786",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "39bce753-718a-42de-8b7a-6b272b760dac",
              "parentUUID": "42ae4fdf-ede2-4578-87cc-960d967f1786",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "6c6dc9f2-5e9d-44c5-8e49-fc664411d344",
              "parentUUID": "42ae4fdf-ede2-4578-87cc-960d967f1786",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39bce753-718a-42de-8b7a-6b272b760dac",
            "6c6dc9f2-5e9d-44c5-8e49-fc664411d344"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e6007b3-bc82-4df5-8414-e27877d815c9",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "4afec41f-862b-4839-9856-4ad27afeb53d",
              "parentUUID": "2e6007b3-bc82-4df5-8414-e27877d815c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "4afcbe5a-2821-43c1-a3dd-6fb3782b03c7",
              "parentUUID": "2e6007b3-bc82-4df5-8414-e27877d815c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "58dd8366-e897-457a-ad3b-d7ac2237269c",
              "parentUUID": "2e6007b3-bc82-4df5-8414-e27877d815c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "902c40e7-af0b-4c14-8c3c-6481dec63250",
              "parentUUID": "2e6007b3-bc82-4df5-8414-e27877d815c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4afec41f-862b-4839-9856-4ad27afeb53d",
            "4afcbe5a-2821-43c1-a3dd-6fb3782b03c7",
            "58dd8366-e897-457a-ad3b-d7ac2237269c",
            "902c40e7-af0b-4c14-8c3c-6481dec63250"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "364bb34b-6ed0-4da7-b1d7-536c3cbbe778",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "dee35c40-dac9-48c1-9f54-57e7d72e069e",
              "parentUUID": "364bb34b-6ed0-4da7-b1d7-536c3cbbe778",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "b31cc6fb-c8cd-4f52-82e8-fef2ea84fe7d",
              "parentUUID": "364bb34b-6ed0-4da7-b1d7-536c3cbbe778",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dee35c40-dac9-48c1-9f54-57e7d72e069e",
            "b31cc6fb-c8cd-4f52-82e8-fef2ea84fe7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 867,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bed5d5e9-6a8d-4fa3-ac14-42c26c0e2266",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "0069772c-2860-4ec1-afac-e8dbc3c29d47",
              "parentUUID": "bed5d5e9-6a8d-4fa3-ac14-42c26c0e2266",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "101b4cfb-2265-4ed6-84b3-30ab06a2e4ab",
              "parentUUID": "bed5d5e9-6a8d-4fa3-ac14-42c26c0e2266",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0069772c-2860-4ec1-afac-e8dbc3c29d47",
            "101b4cfb-2265-4ed6-84b3-30ab06a2e4ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "14a3d04e-b771-44ad-b3f7-f5dc6140d5c7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "480792fe-9474-48ac-856a-ab078d4a7621",
              "parentUUID": "14a3d04e-b771-44ad-b3f7-f5dc6140d5c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "1b338e5a-c407-4de7-97cb-f8e4e1a1efac",
              "parentUUID": "14a3d04e-b771-44ad-b3f7-f5dc6140d5c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "480792fe-9474-48ac-856a-ab078d4a7621",
            "1b338e5a-c407-4de7-97cb-f8e4e1a1efac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9814,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "558212f0-b1bc-4426-a371-638ed9a1d4bd",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "30ca0371-1227-412c-9ea1-15a9df8f535d",
              "parentUUID": "558212f0-b1bc-4426-a371-638ed9a1d4bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8888,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "07617bb2-29d4-4526-903b-48a4f2bd528f",
              "parentUUID": "558212f0-b1bc-4426-a371-638ed9a1d4bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9e966c92-ac4d-402e-a956-e4f983c0411c",
              "parentUUID": "558212f0-b1bc-4426-a371-638ed9a1d4bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30ca0371-1227-412c-9ea1-15a9df8f535d",
            "07617bb2-29d4-4526-903b-48a4f2bd528f",
            "9e966c92-ac4d-402e-a956-e4f983c0411c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12658,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bb14fea0-f4fb-49c3-9230-67961d94b67f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "1c312815-cd6a-48cb-834d-c1304f5e5a06",
              "parentUUID": "bb14fea0-f4fb-49c3-9230-67961d94b67f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5d0115d5-3238-4f5e-a448-3b8729ef13e5",
              "parentUUID": "bb14fea0-f4fb-49c3-9230-67961d94b67f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e02b05e7-623d-450f-9284-d36ddf6b46b3",
              "parentUUID": "bb14fea0-f4fb-49c3-9230-67961d94b67f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "ee17b09c-f78e-45eb-9d37-023672833eae",
              "parentUUID": "bb14fea0-f4fb-49c3-9230-67961d94b67f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c312815-cd6a-48cb-834d-c1304f5e5a06",
            "5d0115d5-3238-4f5e-a448-3b8729ef13e5",
            "e02b05e7-623d-450f-9284-d36ddf6b46b3",
            "ee17b09c-f78e-45eb-9d37-023672833eae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4459,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "01e36823-0791-463d-ba95-762675b78a35",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4328,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7aba9e66-78d1-4989-b9e8-2fd5c72c01b9",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "32ce3138-a956-4de4-a09e-558e41a64bec",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4478,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c3458b96-7954-43ec-9ee2-8cc2032488ce",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4604,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "43008ccd-75eb-4970-bb1f-d6a3a7180dc6",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4431,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b44e1b73-47ee-47eb-b5b2-5e4ef55c8dd1",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4441,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d0e4d052-d453-4c91-92da-59cb382f933a",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4476,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "06a8cea2-7104-412e-bcbe-0f75f2638109",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1df0fd69-39a9-4870-b0ba-4bece0d7e7a5",
              "parentUUID": "803f1bfa-854e-4292-bfda-2f8d6525c46c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "01e36823-0791-463d-ba95-762675b78a35",
            "7aba9e66-78d1-4989-b9e8-2fd5c72c01b9",
            "32ce3138-a956-4de4-a09e-558e41a64bec",
            "c3458b96-7954-43ec-9ee2-8cc2032488ce",
            "43008ccd-75eb-4970-bb1f-d6a3a7180dc6",
            "b44e1b73-47ee-47eb-b5b2-5e4ef55c8dd1",
            "d0e4d052-d453-4c91-92da-59cb382f933a",
            "06a8cea2-7104-412e-bcbe-0f75f2638109",
            "1df0fd69-39a9-4870-b0ba-4bece0d7e7a5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 40117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5aa07f2a-945f-4f61-923f-8b980a4efb04",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4490,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8a8e831c-f2f3-4cd1-91cd-bfbc8a963642",
              "parentUUID": "5aa07f2a-945f-4f61-923f-8b980a4efb04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1694e37e-7d77-4762-a13f-73cf7b7695ce",
              "parentUUID": "5aa07f2a-945f-4f61-923f-8b980a4efb04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4462,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:46821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:46821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:46821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:46821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:46821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:46821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3e8bede7-5f93-4050-ab94-274130aa70ee",
              "parentUUID": "5aa07f2a-945f-4f61-923f-8b980a4efb04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8a8e831c-f2f3-4cd1-91cd-bfbc8a963642",
            "1694e37e-7d77-4762-a13f-73cf7b7695ce",
            "3e8bede7-5f93-4050-ab94-274130aa70ee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a7daebf6-6f6a-47f9-ab52-79e80c710f13",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 589,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46821/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46821/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46821/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46821/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46821/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46821/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46821/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "eef7e122-d46d-4e73-826a-e572127f6c79",
              "parentUUID": "a7daebf6-6f6a-47f9-ab52-79e80c710f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 361,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:46821/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:46821/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:46821/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:46821/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:46821/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:46821/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:46821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:46821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:46821/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:46821/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:46821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "0fd6b457-4e0f-4177-b249-76e64cba4db0",
              "parentUUID": "a7daebf6-6f6a-47f9-ab52-79e80c710f13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eef7e122-d46d-4e73-826a-e572127f6c79",
            "0fd6b457-4e0f-4177-b249-76e64cba4db0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}